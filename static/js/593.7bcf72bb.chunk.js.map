{"version":3,"file":"static/js/593.7bcf72bb.chunk.js","mappings":"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","sources":["api/tmdb_api.js","webpack://react-homework-template/./src/views/MovieDetails.module.css?c107","views/MovieDetails.jsx"],"sourcesContent":["//Function to fetch trending movies\nexport async function fetchTitles() {\n  const BASIC_URL = `https://api.themoviedb.org/3`;\n  const searchParam = new URLSearchParams({\n    api_key: '44d6575d8f8dedfd36c7023de34a30c4',\n  });\n  try {\n    const response = await fetch(\n      `${BASIC_URL}/trending/movie/day?${searchParam}`\n    );\n    const parsed = await response.json();\n    const titles = parsed.results;\n    return titles;\n  } catch (error) {\n    throw new Error(console.log(error));\n  }\n}\n\n//Function to fetch searched movies\nexport async function fetchMovies(searchQuery) {\n  const BASIC_URL = `https://api.themoviedb.org/3`;\n  const searchParam = new URLSearchParams({\n    api_key: '44d6575d8f8dedfd36c7023de34a30c4',\n    query: searchQuery,\n  });\n  try {\n    const response = await fetch(`${BASIC_URL}/search/movie?${searchParam}`);\n    const parsed = await response.json();\n    const titles = parsed.results;\n    console.log(titles);\n    return titles;\n  } catch (error) {\n    throw new Error(console.log(error));\n  }\n}\n\n//Function to fetch movie details\nexport async function fetchMovieDetails(movieId) {\n  const BASIC_URL = `https://api.themoviedb.org/3`;\n  const searchParam = new URLSearchParams({\n    api_key: '44d6575d8f8dedfd36c7023de34a30c4',\n  });\n  try {\n    const response = await fetch(\n      `${BASIC_URL}/movie/${movieId}?${searchParam}`\n    );\n    const parsed = await response.json();\n    return parsed;\n  } catch (error) {\n    throw new Error(console.log(error));\n  }\n}\n\n//Function to fetch movie cast\nexport async function fetchMovieCast(movieId) {\n  const BASIC_URL = `https://api.themoviedb.org/3`;\n  const searchParam = new URLSearchParams({\n    api_key: '44d6575d8f8dedfd36c7023de34a30c4',\n  });\n  try {\n    const response = await fetch(\n      `${BASIC_URL}/movie/${movieId}/credits?${searchParam}`\n    );\n    const parsed = await response.json();\n    return parsed;\n  } catch (error) {\n    throw new Error(console.log(error));\n  }\n}\n\n//Function to fetch movie reviews\nexport async function fetchMovieReviews(movieId) {\n  const BASIC_URL = `https://api.themoviedb.org/3`;\n  const searchParam = new URLSearchParams({\n    api_key: '44d6575d8f8dedfd36c7023de34a30c4',\n  });\n  try {\n    const response = await fetch(\n      `${BASIC_URL}/movie/${movieId}/reviews?${searchParam}`\n    );\n    const parsed = await response.json();\n    return parsed;\n  } catch (error) {\n    throw new Error(console.log(error));\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"link__back\":\"MovieDetails_link__back__ooznR\",\"wrapper\":\"MovieDetails_wrapper__5AnKJ\",\"subwrapper\":\"MovieDetails_subwrapper__JYkjE\"};","import { useState, useEffect, lazy, Suspense } from 'react';\nimport { useParams, NavLink, Route, Routes } from 'react-router-dom';\nimport { fetchMovieDetails } from 'api/tmdb_api';\nimport s from './MovieDetails.module.css';\n\nconst Cast = lazy(() => import('./Cast'));\nconst Reviews = lazy(() => import('./Reviews'));\n\nfunction MovieDetails() {\n  const [details, setDetails] = useState();\n\n  const params = useParams();\n\n  //Fetching moview details during mounting\n  useEffect(() => {\n    try {\n      async function fetchMovie() {\n        const result = await fetchMovieDetails(params.movieId);\n        setDetails(result);\n      }\n      fetchMovie();\n    } catch (error) {\n      console.log(error);\n    }\n  }, [params]);\n\n  return (\n    <div>\n      <NavLink to=\"/movies\" className={s.link__back}>\n        Go back\n      </NavLink>\n\n      <div className={s.wrapper}>\n        {details && (\n          <img\n            src={`https://image.tmdb.org/t/p/w500/${details.backdrop_path}`}\n            alt={details.title}\n          />\n        )}\n\n        <div className={s.subwrapper}>\n          <h1>\n            {details && details.title} ({details && details.release_date})\n          </h1>\n          <p>Userscore: {details && details.vote_average}</p>\n          <h2>Overview</h2>\n          <p>{details && details.overview}</p>\n          <h3>Genres</h3>\n          <p>{details && details.genres.map(genre => genre.name).join(', ')}</p>\n        </div>\n\n        <div>\n          <p>Additional information</p>\n          <ul>\n            <li>\n              <NavLink to=\"cast\">Cast</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"reviews\">Reviews</NavLink>\n            </li>\n          </ul>\n        </div>\n      </div>\n\n      <Suspense fallback={<div>Loading...</div>}>\n        <Routes>\n          <Route path=\"cast\" element={<Cast />} />\n          <Route path=\"reviews\" element={<Reviews />} />\n        </Routes>\n      </Suspense>\n    </div>\n  );\n}\n\nexport default MovieDetails;\n"],"names":["fetchTitles","searchParam","URLSearchParams","api_key","fetch","response","json","parsed","titles","results","Error","console","log","fetchMovies","searchQuery","query","fetchMovieDetails","movieId","fetchMovieCast","fetchMovieReviews","Cast","lazy","Reviews","useState","details","setDetails","params","useParams","useEffect","fetchMovie","result","error","to","className","s","src","backdrop_path","alt","title","release_date","vote_average","overview","genres","map","genre","name","join","Suspense","fallback","path","element"],"sourceRoot":""}