{"version":3,"file":"static/js/653.09a1a81b.chunk.js","mappings":"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","sources":["api/tmdb_api.js","webpack://react-homework-template/./src/components/Movies/Movies.module.css?9f30","components/Movies/Movies.jsx"],"sourcesContent":["//Function to fetch trending movies\nexport async function fetchTitles() {\n  const BASIC_URL = `https://api.themoviedb.org/3`;\n  const searchParam = new URLSearchParams({\n    api_key: '44d6575d8f8dedfd36c7023de34a30c4',\n  });\n  try {\n    const response = await fetch(\n      `${BASIC_URL}/trending/movie/day?${searchParam}`\n    );\n    const parsed = await response.json();\n    const titles = parsed.results;\n    return titles;\n  } catch (error) {\n    throw new Error(console.log(error));\n  }\n}\n\n//Function to fetch searched movies\nexport async function fetchMovies(searchQuery) {\n  const BASIC_URL = `https://api.themoviedb.org/3`;\n  const searchParam = new URLSearchParams({\n    api_key: '44d6575d8f8dedfd36c7023de34a30c4',\n    query: searchQuery,\n  });\n  try {\n    const response = await fetch(`${BASIC_URL}/search/movie?${searchParam}`);\n    const parsed = await response.json();\n    const titles = parsed.results;\n    return titles;\n  } catch (error) {\n    throw new Error(console.log(error));\n  }\n}\n\n//Function to fetch movie details\nexport async function fetchMovieDetails(movieId) {\n  const BASIC_URL = `https://api.themoviedb.org/3`;\n  const searchParam = new URLSearchParams({\n    api_key: '44d6575d8f8dedfd36c7023de34a30c4',\n  });\n  try {\n    const response = await fetch(\n      `${BASIC_URL}/movie/${movieId}?${searchParam}`\n    );\n    const parsed = await response.json();\n    return parsed;\n  } catch (error) {\n    throw new Error(console.log(error));\n  }\n}\n\n//Function to fetch movie cast\nexport async function fetchMovieCast(movieId) {\n  const BASIC_URL = `https://api.themoviedb.org/3`;\n  const searchParam = new URLSearchParams({\n    api_key: '44d6575d8f8dedfd36c7023de34a30c4',\n  });\n  try {\n    const response = await fetch(\n      `${BASIC_URL}/movie/${movieId}/credits?${searchParam}`\n    );\n    const parsed = await response.json();\n    return parsed;\n  } catch (error) {\n    throw new Error(console.log(error));\n  }\n}\n\n//Function to fetch movie reviews\nexport async function fetchMovieReviews(movieId) {\n  const BASIC_URL = `https://api.themoviedb.org/3`;\n  const searchParam = new URLSearchParams({\n    api_key: '44d6575d8f8dedfd36c7023de34a30c4',\n  });\n  try {\n    const response = await fetch(\n      `${BASIC_URL}/movie/${movieId}/reviews?${searchParam}`\n    );\n    const parsed = await response.json();\n    return parsed;\n  } catch (error) {\n    throw new Error(console.log(error));\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Movies_list__JEO-P\",\"link\":\"Movies_link__0oDWE\",\"item\":\"Movies_item__+Yifn\",\"form\":\"Movies_form__mp42q\",\"button\":\"Movies_button__hVjwG\",\"input\":\"Movies_input__OE3ef\"};","import { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { fetchMovies } from 'api/tmdb_api';\nimport s from './Movies.module.css';\nimport { Suspense } from 'react';\n\nfunction Movies() {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('name') ?? '';\n  const location = useLocation();\n\n  const updateQueryString = name => {\n    console.log(name);\n    const nextParams = name !== '' ? { name } : {};\n    setSearchParams(nextParams);\n  };\n\n  useEffect(() => {\n    async function fetching() {\n      const result = await fetchMovies(searchQuery);\n      setMovies(result);\n    }\n    fetching();\n  }, [searchQuery]);\n\n  //Method to handle search submit\n  //Prevents page reloading\n  const onHandleSubmit = async e => {\n    e.preventDefault();\n    if (!e.currentTarget.search.value.trim()) {\n      throw new Error('Empty string is not allowed!');\n    }\n    updateQueryString(e.currentTarget.search.value);\n  };\n\n  return (\n    <>\n      <form onSubmit={onHandleSubmit} className={s.form}>\n        <input\n          type=\"text\"\n          name=\"search\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          className={s.input}\n        />\n        <button type=\"submit\" className={s.button}>\n          <span>Search</span>\n        </button>\n      </form>\n      <Suspense fallback={<div>Loading...</div>}>\n        {' '}\n        {searchQuery ? (\n          <ul className={s.list}>\n            {movies.map(movie => (\n              <li key={movie.id} className={s.item}>\n                <Link\n                  to={`${movie.id}`}\n                  state={{ from: location }}\n                  className={s.link}\n                >\n                  {movie.title}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <div>Try to seach something!</div>\n        )}\n      </Suspense>\n    </>\n  );\n}\n\nexport default Movies;\n"],"names":["fetchTitles","searchParam","URLSearchParams","api_key","fetch","response","json","parsed","titles","results","Error","console","log","fetchMovies","searchQuery","query","fetchMovieDetails","movieId","fetchMovieCast","fetchMovieReviews","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","get","location","useLocation","useEffect","result","fetching","onHandleSubmit","e","preventDefault","currentTarget","search","value","trim","name","onSubmit","className","s","type","autoComplete","autoFocus","placeholder","Suspense","fallback","map","movie","to","id","state","from","title"],"sourceRoot":""}