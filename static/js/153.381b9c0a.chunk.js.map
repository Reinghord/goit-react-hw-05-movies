{"version":3,"file":"static/js/153.381b9c0a.chunk.js","mappings":"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","sources":["api/tmdb_api.js","webpack://react-homework-template/./src/views/MoviesView.module.css?fdea","views/MoviesView.jsx"],"sourcesContent":["//Function to fetch trending movies\nexport async function fetchTitles() {\n  const BASIC_URL = `https://api.themoviedb.org/3`;\n  const searchParam = new URLSearchParams({\n    api_key: '44d6575d8f8dedfd36c7023de34a30c4',\n  });\n  try {\n    const response = await fetch(\n      `${BASIC_URL}/trending/movie/day?${searchParam}`\n    );\n    const parsed = await response.json();\n    const titles = parsed.results;\n    return titles;\n  } catch (error) {\n    throw new Error(console.log(error));\n  }\n}\n\n//Function to fetch searched movies\nexport async function fetchMovies(searchQuery) {\n  const BASIC_URL = `https://api.themoviedb.org/3`;\n  const searchParam = new URLSearchParams({\n    api_key: '44d6575d8f8dedfd36c7023de34a30c4',\n    query: searchQuery,\n  });\n  try {\n    const response = await fetch(`${BASIC_URL}/search/movie?${searchParam}`);\n    const parsed = await response.json();\n    const titles = parsed.results;\n    console.log(titles);\n    return titles;\n  } catch (error) {\n    throw new Error(console.log(error));\n  }\n}\n\n//Function to fetch movie details\nexport async function fetchMovieDetails(movieId) {\n  const BASIC_URL = `https://api.themoviedb.org/3`;\n  const searchParam = new URLSearchParams({\n    api_key: '44d6575d8f8dedfd36c7023de34a30c4',\n  });\n  try {\n    const response = await fetch(\n      `${BASIC_URL}/movie/${movieId}?${searchParam}`\n    );\n    const parsed = await response.json();\n    return parsed;\n  } catch (error) {\n    throw new Error(console.log(error));\n  }\n}\n\n//Function to fetch movie cast\nexport async function fetchMovieCast(movieId) {\n  const BASIC_URL = `https://api.themoviedb.org/3`;\n  const searchParam = new URLSearchParams({\n    api_key: '44d6575d8f8dedfd36c7023de34a30c4',\n  });\n  try {\n    const response = await fetch(\n      `${BASIC_URL}/movie/${movieId}/credits?${searchParam}`\n    );\n    const parsed = await response.json();\n    return parsed;\n  } catch (error) {\n    throw new Error(console.log(error));\n  }\n}\n\n//Function to fetch movie reviews\nexport async function fetchMovieReviews(movieId) {\n  const BASIC_URL = `https://api.themoviedb.org/3`;\n  const searchParam = new URLSearchParams({\n    api_key: '44d6575d8f8dedfd36c7023de34a30c4',\n  });\n  try {\n    const response = await fetch(\n      `${BASIC_URL}/movie/${movieId}/reviews?${searchParam}`\n    );\n    const parsed = await response.json();\n    return parsed;\n  } catch (error) {\n    throw new Error(console.log(error));\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesView_list__5cxuR\",\"link\":\"MoviesView_link__+Ru2-\",\"item\":\"MoviesView_item__ZPxu4\",\"form\":\"MoviesView_form__3+H9W\",\"button\":\"MoviesView_button__LnHdC\",\"input\":\"MoviesView_input__8-l0H\"};","import { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { fetchMovies } from 'api/tmdb_api';\nimport s from './MoviesView.module.css';\n\nfunction MoviesView() {\n  const [value, setValue] = useState('');\n  const [movies, setMovies] = useState([]);\n\n  //Method to store input value in component state\n  const onHandleInput = e => {\n    setValue(e.currentTarget.value);\n  };\n\n  //Method to handle search submit\n  //Prevents page reloading\n  const onHandleSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (!value) {\n        throw new Error('Empty string is not allowed!');\n      }\n      const result = await fetchMovies(value.trim(''));\n      setMovies(result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={onHandleSubmit} className={s.form}>\n        <button type=\"submit\" className={s.button}>\n          <span>Search</span>\n        </button>\n\n        <input\n          type=\"text\"\n          name=\"search\"\n          value={value}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          className={s.input}\n          onChange={onHandleInput}\n        />\n      </form>\n      <ul className={s.list}>\n        {movies.map(movie => (\n          <li key={movie.id} className={s.item}>\n            <Link to={`${movie.id}`} className={s.link}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n\nexport default MoviesView;\n"],"names":["fetchTitles","searchParam","URLSearchParams","api_key","fetch","response","json","parsed","titles","results","Error","console","log","fetchMovies","searchQuery","query","fetchMovieDetails","movieId","fetchMovieCast","fetchMovieReviews","useState","value","setValue","movies","setMovies","onHandleSubmit","e","preventDefault","trim","result","onSubmit","className","s","type","name","autoComplete","autoFocus","placeholder","onChange","currentTarget","map","movie","to","id","title"],"sourceRoot":""}