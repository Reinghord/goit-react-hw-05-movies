{"version":3,"file":"static/js/979.34f96624.chunk.js","mappings":"sSACO,SAAeA,IAAtB,+B,aAAO,O,oBAAA,+HAECC,EAAc,IAAIC,gBAAgB,CACtCC,QAAS,qCAHN,kBAMoBC,MAAM,GAAD,OANzB,+BAMyB,+BACSH,IAPlC,cAMGI,EANH,gBASkBA,EAASC,OAT3B,cASGC,EATH,OAUGC,EAASD,EAAOE,QAVnB,kBAWID,GAXJ,wCAaG,IAAIE,MAAMC,QAAQC,IAAR,OAbb,iFAkBA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAA2BC,GAA3B,kHAECb,EAAc,IAAIC,gBAAgB,CACtCC,QAAS,mCACTY,MAAOD,IAJJ,kBAOoBV,MAAM,GAAD,OAPzB,+BAOyB,yBAA8BH,IAPvD,cAOGI,EAPH,gBAQkBA,EAASC,OAR3B,cAQGC,EARH,OASGC,EAASD,EAAOE,QATnB,kBAUID,GAVJ,wCAYG,IAAIE,MAAMC,QAAQC,IAAR,OAZb,iFAiBA,SAAeI,EAAtB,kC,aAAO,O,oBAAA,WAAiCC,GAAjC,gHAEChB,EAAc,IAAIC,gBAAgB,CACtCC,QAAS,qCAHN,kBAMoBC,MAAM,GAAD,OANzB,+BAMyB,kBACJa,EADI,YACOhB,IAPhC,cAMGI,EANH,gBASkBA,EAASC,OAT3B,cASGC,EATH,yBAUIA,GAVJ,wCAYG,IAAIG,MAAMC,QAAQC,IAAR,OAZb,iFAiBA,SAAeM,EAAtB,kC,aAAO,O,oBAAA,WAA8BD,GAA9B,gHAEChB,EAAc,IAAIC,gBAAgB,CACtCC,QAAS,qCAHN,kBAMoBC,MAAM,GAAD,OANzB,+BAMyB,kBACJa,EADI,oBACehB,IAPxC,cAMGI,EANH,gBASkBA,EAASC,OAT3B,cASGC,EATH,yBAUIA,GAVJ,wCAYG,IAAIG,MAAMC,QAAQC,IAAR,OAZb,iFAiBA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAAiCF,GAAjC,gHAEChB,EAAc,IAAIC,gBAAgB,CACtCC,QAAS,qCAHN,kBAMoBC,MAAM,GAAD,OANzB,+BAMyB,kBACJa,EADI,oBACehB,IAPxC,cAMGI,EANH,gBASkBA,EAASC,OAT3B,cASGC,EATH,yBAUIA,GAVJ,wCAYG,IAAIG,MAAMC,QAAQC,IAAR,OAZb,iF,+ICrEP,EAAuB,uBAAvB,EAAqD,uBAArD,EAAmF,uB,SCqCnF,MAjCA,WACE,OAA4BQ,EAAAA,EAAAA,UAAS,IAArC,eAAOZ,EAAP,KAAea,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAejB,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAK,IACYC,EADb,mCACF,qGACuBzB,EAAAA,EAAAA,MADvB,OACQ0B,EADR,OAEEL,EAAUK,GAFZ,2CADE,qDAKFD,GAGD,CAFC,MAAOE,GACPhB,QAAQC,IAAIe,EACb,CACF,GAAE,KAGD,eAAIC,UAAWC,EAAf,SACGrB,EAAOsB,KAAI,SAAAC,GAAK,OACf,eAAmBH,UAAWC,EAA9B,UACE,SAAC,KAAD,CACEG,GAAE,iBAAYD,EAAME,IACpBL,UAAWC,EACXK,MAAO,CAAEC,KAAMb,GAHjB,SAKGS,EAAMA,SANFA,EAAME,GADA,KAatB,C","sources":["api/tmdb_api.js","webpack://react-homework-template/./src/views/HomeView.module.css?f55d","views/HomeView.jsx"],"sourcesContent":["//Function to fetch trending movies\nexport async function fetchTitles() {\n  const BASIC_URL = `https://api.themoviedb.org/3`;\n  const searchParam = new URLSearchParams({\n    api_key: '44d6575d8f8dedfd36c7023de34a30c4',\n  });\n  try {\n    const response = await fetch(\n      `${BASIC_URL}/trending/movie/day?${searchParam}`\n    );\n    const parsed = await response.json();\n    const titles = parsed.results;\n    return titles;\n  } catch (error) {\n    throw new Error(console.log(error));\n  }\n}\n\n//Function to fetch searched movies\nexport async function fetchMovies(searchQuery) {\n  const BASIC_URL = `https://api.themoviedb.org/3`;\n  const searchParam = new URLSearchParams({\n    api_key: '44d6575d8f8dedfd36c7023de34a30c4',\n    query: searchQuery,\n  });\n  try {\n    const response = await fetch(`${BASIC_URL}/search/movie?${searchParam}`);\n    const parsed = await response.json();\n    const titles = parsed.results;\n    return titles;\n  } catch (error) {\n    throw new Error(console.log(error));\n  }\n}\n\n//Function to fetch movie details\nexport async function fetchMovieDetails(movieId) {\n  const BASIC_URL = `https://api.themoviedb.org/3`;\n  const searchParam = new URLSearchParams({\n    api_key: '44d6575d8f8dedfd36c7023de34a30c4',\n  });\n  try {\n    const response = await fetch(\n      `${BASIC_URL}/movie/${movieId}?${searchParam}`\n    );\n    const parsed = await response.json();\n    return parsed;\n  } catch (error) {\n    throw new Error(console.log(error));\n  }\n}\n\n//Function to fetch movie cast\nexport async function fetchMovieCast(movieId) {\n  const BASIC_URL = `https://api.themoviedb.org/3`;\n  const searchParam = new URLSearchParams({\n    api_key: '44d6575d8f8dedfd36c7023de34a30c4',\n  });\n  try {\n    const response = await fetch(\n      `${BASIC_URL}/movie/${movieId}/credits?${searchParam}`\n    );\n    const parsed = await response.json();\n    return parsed;\n  } catch (error) {\n    throw new Error(console.log(error));\n  }\n}\n\n//Function to fetch movie reviews\nexport async function fetchMovieReviews(movieId) {\n  const BASIC_URL = `https://api.themoviedb.org/3`;\n  const searchParam = new URLSearchParams({\n    api_key: '44d6575d8f8dedfd36c7023de34a30c4',\n  });\n  try {\n    const response = await fetch(\n      `${BASIC_URL}/movie/${movieId}/reviews?${searchParam}`\n    );\n    const parsed = await response.json();\n    return parsed;\n  } catch (error) {\n    throw new Error(console.log(error));\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"HomeView_list__IRaUY\",\"link\":\"HomeView_link__wkjR1\",\"item\":\"HomeView_item__6xg4v\"};","import { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { fetchTitles } from 'api/tmdb_api';\nimport s from './HomeView.module.css';\n\nfunction HomeView() {\n  const [titles, setTitles] = useState([]);\n  const location = useLocation();\n\n  //Fetch trending movies\n  useEffect(() => {\n    try {\n      async function fetchTrendingMovies() {\n        const result = await fetchTitles();\n        setTitles(result);\n      }\n      fetchTrendingMovies();\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  return (\n    <ul className={s.list}>\n      {titles.map(title => (\n        <li key={title.id} className={s.item}>\n          <Link\n            to={`movies/${title.id}`}\n            className={s.link}\n            state={{ from: location }}\n          >\n            {title.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\nexport default HomeView;\n"],"names":["fetchTitles","searchParam","URLSearchParams","api_key","fetch","response","json","parsed","titles","results","Error","console","log","fetchMovies","searchQuery","query","fetchMovieDetails","movieId","fetchMovieCast","fetchMovieReviews","useState","setTitles","location","useLocation","useEffect","fetchTrendingMovies","result","error","className","s","map","title","to","id","state","from"],"sourceRoot":""}