{"version":3,"file":"static/js/133.401b3a2b.chunk.js","mappings":"yNAkCA,UA9BA,WACE,OAA8BA,EAAAA,EAAAA,YAA9B,eAAOC,EAAP,KAAgBC,EAAhB,KAEMC,GAASC,EAAAA,EAAAA,MAWf,OARAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,qGACuBC,EAAAA,EAAAA,IAAkBH,EAAOI,SADhD,OACQC,EADR,OAEEN,EAAWM,GAFb,4CADc,uBAAC,WAAD,wBAKdC,EACD,GAAE,CAACN,KAGF,0BACE,wBACGF,GAAqC,IAA1BA,EAAQS,cAChBT,EAAQU,QAAQC,KAAI,SAAAC,GAAM,OACxB,2BACE,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOG,GADQ,IAM1B,+BAIX,C","sources":["views/Reviews.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'api/tmdb_api';\n\nfunction Reviews() {\n  const [reviews, setReviews] = useState();\n\n  const params = useParams();\n\n  //Fetching reviews on mounting\n  useEffect(() => {\n    async function fetchDetails() {\n      const result = await fetchMovieReviews(params.movieId);\n      setReviews(result);\n    }\n    fetchDetails();\n  }, [params]);\n\n  return (\n    <div>\n      <ul>\n        {reviews && reviews.total_results !== 0\n          ? reviews.results.map(review => (\n              <li key={review.id}>\n                <h3>Author: {review.author}</h3>\n                <p>{review.content}</p>\n              </li>\n            ))\n          : 'No reviews for this film.'}\n      </ul>\n    </div>\n  );\n}\n\nexport default Reviews;\n"],"names":["useState","reviews","setReviews","params","useParams","useEffect","fetchMovieReviews","movieId","result","fetchDetails","total_results","results","map","review","author","content","id"],"sourceRoot":""}